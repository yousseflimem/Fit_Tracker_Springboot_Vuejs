{
	"info": {
		"_postman_id": "d302e2de-9a9c-42c5-880f-9b5e93fa2955",
		"name": "FitTrackerAPI",
		"description": "Postman collection to test FitTracker Spring Boot API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "40844452"
	},
	"item": [
		{
			"name": "Auth Controller",
			"item": [
				{
					"name": "Register User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test('Response contains success message', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.equal('User registered successfully');",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"testuser\",\r\n    \"password\": \"Test123!\",\r\n    \"email\": \"testuser@example.com\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Authenticate User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test('Response contains JWT token', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.token).to.be.a('string');",
									"    pm.environment.set('jwtToken', jsonData.token);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"testuser\",\r\n    \"password\": \"Test123!\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/authenticate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"authenticate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Authenticate Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test('Response contains JWT token', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.token).to.be.a('string');",
									"    pm.environment.set('adminJwtToken', jsonData.token);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"admin\",\r\n    \"password\": \"admin\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/authenticate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"authenticate"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Booking Controller",
			"item": [
				{
					"name": "Create Booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test('Booking created successfully', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.be.a('number');",
									"    pm.expect(jsonData.status).to.equal('PENDING');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwtToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"userId\": 1, \"classId\": 1, \"bookingDate\": \"2025-05-12T10:00:00\", \"status\": \"PENDING\"}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/bookings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"bookings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Bookings (Admin)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test('Response is paginated', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.content).to.be.an('array');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{adminJwtToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/bookings?page=0&size=10",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"bookings"
							],
							"query": [
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Bookings by User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test('Response is an array', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.an('array');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwtToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/bookings/user/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"bookings",
								"user",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test('Booking updated successfully', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.status).to.equal('CONFIRMED');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwtToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"userId\": 1, \"classId\": 1, \"bookingDate\": \"2025-05-12T11:00:00\", \"status\": \"CONFIRMED\"}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/bookings/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"bookings",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200 or 204', function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwtToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/bookings/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"bookings",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Class Controller",
			"item": [
				{
					"name": "Search Classes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test('Response is paginated', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.content).to.be.an('array');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/classes/search?keyword=yoga&page=0&size=10",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"classes",
								"search"
							],
							"query": [
								{
									"key": "keyword",
									"value": "yoga"
								},
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Class by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test('Response contains class details', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.equal(1);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/classes/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"classes",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Class (Admin/Coach)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test('Class created successfully', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.title).to.equal('Yoga Class');",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{adminJwtToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Yoga\",\r\n    \"category\": \"Fitness\",\r\n    \"description\": \"Morning yoga session\",\r\n    \"startTime\": \"2025-10-10T09:00:00\",\r\n    \"endTime\": \"2025-10-10T10:00:00\",\r\n    \"capacity\": 20,\r\n    \"coachId\": 1,\r\n    \"imageUrls\": [\r\n        \"http://example.com/yoga1.jpg\",\r\n        \"http://example.com/yoga2.jpg\"\r\n    ]\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/classes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"classes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Class (Admin/Coach)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test('Class updated successfully', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.title).to.equal('Updated Yoga Class');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{adminJwtToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"title\": \"Updated Yoga Class\", \"category\": \"Yoga\", \"description\": \"Updated description\", \"startTime\": \"2025-05-12T10:00:00\", \"endTime\": \"2025-05-12T11:00:00\", \"capacity\": 25, \"coachId\": 1, \"imageUrls\": [\"https://example.com/updated_image.jpg\"]}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/classes/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"classes",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Class (Admin/Coach)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200 or 204', function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{adminJwtToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/classes/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"classes",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Membership Controller",
			"item": [
				{
					"name": "Get All Memberships",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test('Response is an array', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.an('array');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/memberships",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"memberships"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Membership by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test('Response contains membership details', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.equal(1);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/memberships/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"memberships",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Membership (Admin)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test('Membership created successfully', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.name).to.equal('Basic Membership');",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{adminJwtToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Basic Membership\",\r\n    \"description\": \"Basic access\",\r\n    \"type\": \"BASIC\",\r\n    \"price\": 29.99,\r\n    \"duration\": 30,\r\n    \"active\": true\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/memberships",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"memberships"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Membership (Admin)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test('Membership updated successfully', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.name).to.equal('Updated Basic Membership');",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{adminJwtToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Updated Basic Membership\",\r\n    \"description\": \"Updated access\",\r\n    \"type\": \"BASIC\",\r\n    \"price\": 39.99,\r\n    \"duration\": 30,\r\n    \"active\": true\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/memberships/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"memberships",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Membership (Admin)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200 or 204', function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{adminJwtToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/memberships/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"memberships",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Order Controller",
			"item": [
				{
					"name": "Get Order by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test('Response contains order details', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.equal(1);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwtToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/orders/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"orders",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test('Order created successfully', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.items).to.be.an('array');",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwtToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"items\": [\r\n        {\r\n            \"productId\": 1,\r\n            \"quantity\": 2\r\n        }\r\n    ]\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/orders",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test('Order updated successfully', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.items[0].quantity).to.equal(3);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwtToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"items\": [{\"productId\": 1, \"quantity\": 3}]}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/orders/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"orders",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200 or 204', function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwtToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/orders/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"orders",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Orders (Admin)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test('Response is paginated', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.content).to.be.an('array');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{adminJwtToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/orders?page=0&size=10",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"orders"
							],
							"query": [
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User Orders",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test('Response is paginated', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.content).to.be.an('array');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwtToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/orders/user?page=0&size=10",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"orders",
								"user"
							],
							"query": [
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "10"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Payment Controller",
			"item": [
				{
					"name": "Get All Payments (Admin)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test('Response is paginated', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.content).to.be.an('array');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{adminJwtToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/payments?page=0&size=10",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"payments"
							],
							"query": [
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User Payments",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test('Response is paginated', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.content).to.be.an('array');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwtToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/payments/user?page=0&size=10",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"payments",
								"user"
							],
							"query": [
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Payment by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test('Response contains payment details', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.equal(1);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwtToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/payments/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"payments",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Payment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test('Payment created successfully', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.status).to.equal('PENDING');",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwtToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"orderId\": 1,\r\n    \"amount\": 59.98,\r\n    \"paymentDate\": \"2025-05-12T10:00:00\",\r\n    \"status\": \"PENDING\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/payments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"payments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Payment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test('Payment updated successfully', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.status).to.equal('COMPLETED');",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwtToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"orderId\": 1,\r\n    \"amount\": 59.98,\r\n    \"paymentDate\": \"2025-05-12T10:00:00\",\r\n    \"status\": \"COMPLETED\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/payments/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"payments",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Payment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200 or 204', function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwtToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/payments/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"payments",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Product Controller",
			"item": [
				{
					"name": "Search Products",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test('Response is paginated', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.content).to.be.an('array');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/products?keyword=protein&page=0&size=10",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"products"
							],
							"query": [
								{
									"key": "keyword",
									"value": "protein"
								},
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Product by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test('Response contains product details', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.equal(1);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/products/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"products",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product (Admin)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test('Product created successfully', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.name).to.equal('Protein Powder');",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{adminJwtToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Protein Powder\",\r\n    \"category\": \"Supplements\",\r\n    \"description\": \"High-quality protein\",\r\n    \"price\": 29.99,\r\n    \"stock\": 100,\r\n    \"imageUrls\": [\r\n        \"https://example.com/protein.jpg\"\r\n    ]\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/products",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Product (Admin)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test('Product updated successfully', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.name).to.equal('Updated Protein Powder');",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{adminJwtToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Updated Protein Powder\",\r\n    \"category\": \"Supplements\",\r\n    \"description\": \"Updated description\",\r\n    \"price\": 34.99,\r\n    \"stock\": 90,\r\n    \"imageUrls\": [\r\n        \"https://example.com/updated_protein.jpg\"\r\n    ]\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/products/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"products",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Product (Admin)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200 or 204', function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{adminJwtToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/products/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"products",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Low Stock Products (Admin)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test('Response is paginated', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.content).to.be.an('array');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{adminJwtToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/products/low-stock?threshold=10&page=0&size=10",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"products",
								"low-stock"
							],
							"query": [
								{
									"key": "threshold",
									"value": "10"
								},
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Product Stock (Admin)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200 or 204', function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{adminJwtToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/products/1/stock?quantity=50",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"products",
								"1",
								"stock"
							],
							"query": [
								{
									"key": "quantity",
									"value": "50"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Set Product Stock (Admin)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Stock updated successfully\", function () {\r",
									"    // Follow up with a GET to verify the stock\r",
									"    pm.sendRequest({\r",
									"        url: \"{{baseUrl}}/api/products/1\",\r",
									"        method: \"GET\",\r",
									"        header: {\r",
									"            \"Authorization\": \"Bearer {{adminJwtToken}}\"\r",
									"        }\r",
									"    }, function (err, response) {\r",
									"        pm.expect(err).to.be.null;\r",
									"        pm.expect(response).to.have.status(200);\r",
									"        var jsonData = response.json();\r",
									"        pm.expect(jsonData.stock).to.be.a(\"number\");\r",
									"        // Assuming initial stock was 100, new stock should be 120\r",
									"        pm.expect(jsonData.stock).to.equal(120);\r",
									"    });\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/products/1/stock/set?stock=50",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"products",
								"1",
								"stock",
								"set"
							],
							"query": [
								{
									"key": "stock",
									"value": "50"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Review Controller",
			"item": [
				{
					"name": "Get Reviews by Workout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test('Response is paginated', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.content).to.be.an('array');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/reviews/workout/1?page=0&size=10",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"reviews",
								"workout",
								"1"
							],
							"query": [
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User Reviews",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test('Response is paginated', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.content).to.be.an('array');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwtToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/reviews/user?page=0&size=10",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"reviews",
								"user"
							],
							"query": [
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Review",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test('Review created successfully', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.rating).to.equal(5);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwtToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"workoutId\": 1, \"rating\": 5, \"comment\": \"Great workout!\"}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/reviews",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"reviews"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Review",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200 or 204', function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwtToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/reviews/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"reviews",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "User Controller",
			"item": [
				{
					"name": "Get All Users (Admin)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test('Response is an array', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.an('array');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{adminJwtToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test('Response contains user details', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.equal(1);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwtToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/users/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User (Admin)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test('User created successfully', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.username).to.equal('newuser');",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{adminJwtToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"newuser\",\r\n    \"email\": \"newuser@example.com\",\r\n    \"password\": \"Newuser123!\",\r\n    \"role\": \"USER\",\r\n    \"membershipId\": 1,\r\n    \"profileImageUrl\": \"https://example.com/profile.jpg\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test('User updated successfully', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.username).to.equal('updateduser');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwtToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"username\": \"updateduser\", \"email\": \"updateduser@example.com\", \"password\": \"Updated123!\", \"role\": \"USER\", \"membershipId\": 1, \"profileImageUrl\": \"https://example.com/updated_profile.jpg\"}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/users/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User Role (Admin)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test('User role updated successfully', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.role).to.equal('COACH');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{adminJwtToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\"COACH\""
						},
						"url": {
							"raw": "{{baseUrl}}/api/users/1/role",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"1",
								"role"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete User (Admin)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200 or 204', function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{adminJwtToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/users/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Workout Controller",
			"item": [
				{
					"name": "Search Workouts",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test('Response is paginated', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.content).to.be.an('array');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/workouts?keyword=cardio&page=0&size=10",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"workouts"
							],
							"query": [
								{
									"key": "keyword",
									"value": "cardio"
								},
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Workout by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test('Response contains workout details', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.equal(1);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/workouts/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"workouts",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Workout (Admin/Coach)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test('Workout created successfully', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.name).to.equal('Cardio Blast');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{adminJwtToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\": \"Cardio Blast\", \"category\": \"Cardio\", \"description\": \"High-intensity cardio\", \"durationInMinutes\": 45, \"coachId\": 1, \"imageUrls\": [\"https://example.com/cardio.jpg\"]}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/workouts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"workouts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Workout (Admin/Coach)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test('Workout updated successfully', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.name).to.equal('Updated Cardio Blast');",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{adminJwtToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Updated Cardio Blast\",\r\n    \"category\": \"Cardio\",\r\n    \"description\": \"Updated cardio\",\r\n    \"durationInMinutes\": 50,\r\n    \"coachId\": 1,\r\n    \"imageUrls\": [\r\n        \"https://example.com/updated_cardio.jpg\"\r\n    ]\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/workouts/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"workouts",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Workout (Admin/Coach)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200 or 204', function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{adminJwtToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/workouts/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"workouts",
								"1"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"key": "Token",
			"value": "",
			"type": "default"
		}
	]
}